buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.0"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.60'
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "1.2.1"
group = "com.ejektaflex.pewter" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Pewter"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}


minecraft {
    version = "1.12.2-14.23.4.2765"
    runDir = "run"
    mappings = "stable_39"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    jcenter()
    maven {
        name 'Shadowfacts Maven'
        url "http://maven.shadowfacts.net/"
    }
    maven {
        name 'Maven for JEI'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        name = "MMD"
        url = "https://maven.mcmoddev.com/"
    }
}

dependencies {
    // Forgelin
    compile group: "net.shadowfacts", name: "Forgelin", version: "${v_forgelin}"
    // Mantle
    compile group: "slimeknights.mantle", name: "Mantle", version: "${v_minecraft_root}-${v_mantle}"
    // Tinkers' Construct
    compile group: "slimeknights", name: "TConstruct", version: "${v_minecraft}-${v_tinkers}"
    // Construct's Armory
    compile files('libonly/conarm-1.12.2-1.0.2.jar')
    // compile against the JEI API but do not include it at runtime
    deobfProvided "mezz.jei:jei_${v_minecraft}:${v_jei}:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${v_minecraft}:${v_jei}"

    // Optional dependencies. Apprently, 'fileTree' does not work for this use case.
    compileOnly files('libonly/Botania+r1.10-356.jar')

    compileOnly files('libonly/Thaumcraft-1.12.2-6.1.BETA24.jar')
    compileOnly 'angry-pixel-the-betweenlands-mod:TheBetweenlands:3.3.12:universal'
    compileOnly group: "com.azanor", name: "Thaumcraft", version: "1.12.2-6.1.BETA24"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

dokka {
    outputFormat = 'gfm'
    outputDirectory = "../ModDocs/docs/"
    packageOptions {
        prefix = "com.ejektaflex.pewter"
        suppress = true
    }
    packageOptions {
        prefix = "com.ejektaflex.pewter.api"
        suppress = false
    }
}

jar {
    from sourceSets.main.output
    from sourceSets.api.output
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}


